--
-- PostgreSQL database dump
--

-- Dumped from database version 15.12 (Debian 15.12-1.pgdg120+1)
-- Dumped by pg_dump version 17.4 (Debian 17.4-1.pgdg120+2)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: ref_info; Type: TABLE; Schema: public; Owner: -
--

DROP TABLE IF EXISTS public.ref_info CASCADE;
CREATE TABLE public.ref_info (
    guid uuid NOT NULL,
    type character varying,
    starttime character varying(11) NOT NULL,
    id integer NOT NULL
);


--
-- Name: rdts; Type: TABLE; Schema: public; Owner: -
--

DROP TABLE IF EXISTS public.rdts CASCADE;
CREATE TABLE public.rdts (
    id smallint NOT NULL,
    modifier smallint DEFAULT '0'::smallint NOT NULL,
    name character varying(80) NOT NULL,
    type character varying(80) NOT NULL,
    description text
);


--
-- Name: secondaryrdts; Type: TABLE; Schema: public; Owner: -
--

DROP TABLE IF EXISTS public.secondaryrdts CASCADE;
CREATE TABLE public.secondaryrdts (
    parent_id smallint NOT NULL,
    rdt_id smallint NOT NULL,
    CONSTRAINT secondaryrdts_check CHECK ((NOT (rdt_id = parent_id)))
);


--
-- Name: api_rdts_secondary; Type: VIEW; Schema: public; Owner: -
--

drop view if exists api_rdts_secondary cascade;
create view api_rdts_secondary as 
  select rdtref.guid,
    rdtref.type as ref_type,
    rdts.type as type,
    modifier,
    name,
    description,
    S.rdt_id as secondary_id, 
    S.guid as secondary_guid
  from ((( SELECT ref_info_1.guid,
            ref_info_1.type,
            ref_info_1.starttime,
            ref_info_1.id
           FROM public.ref_info ref_info_1
          WHERE (((ref_info_1.type)::text ~~ 'rdt.%'::text) OR ((ref_info_1.type)::text = 'rdt'::text))) as rdtref
    join public.rdts using (id))
    left outer join (select rdt_id, ref_info_2.guid, parent_id from secondaryrdts join (select guid, id from ref_info where type like 'rdt.%') ref_info_2 on rdt_id=id
    ) as S on rdts.id = S.parent_id)
  order by type, modifier, name, secondary_id;


--
-- Name: api_rdts; Type: VIEW; Schema: public; Owner: -
--

drop view if exists api_rdts CASCADE;
create view api_rdts as 
  select guid, 
    ref_type,
    modifier,
    name,
    description,
    array_remove(array_agg(secondary_guid), NULL) as secondaryrdts
   from api_rdts_secondary
  group by guid, ref_type, type, modifier, name, description;


--
-- Name: api_durations; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW public.api_durations AS
 SELECT api_rdts.guid,
    api_rdts.type,
    api_rdts.modifier,
    api_rdts.name,
    api_rdts.description,
    api_rdts.secondaryrdts
   FROM public.api_rdts
  WHERE ((api_rdts.type = 'rdt.duration'::text) OR (api_rdts.type ~~ 'rdt.duration.%'::text));


--
-- Name: api_ranges; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW public.api_ranges AS
 SELECT api_rdts.guid,
    api_rdts.type,
    api_rdts.modifier,
    api_rdts.name,
    api_rdts.description,
    api_rdts.secondaryrdts
   FROM public.api_rdts
  WHERE ((api_rdts.type = 'rdt.duration'::text) OR (api_rdts.type ~~ 'rdt.duration.%'::text));


--
-- Name: api_rdts_base; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW public.api_rdts_base AS
 SELECT ref_info.guid,
    concat(ref_info.type, '.', rdts.type) AS type,
    rdts.modifier,
    rdts.name,
    rdts.description
   FROM (( SELECT ref_info_1.guid,
            ref_info_1.type,
            ref_info_1.starttime,
            ref_info_1.id
           FROM public.ref_info ref_info_1
          WHERE (((ref_info_1.type)::text ~~ 'rdt.%'::text) OR ((ref_info_1.type)::text = 'rdt'::text))) ref_info
     JOIN public.rdts USING (id));


--
-- Name: api_rdts_noguid; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW public.api_rdts_noguid AS
SELECT
    NULL::smallint AS id,
    NULL::smallint AS modifier,
    NULL::character varying(80) AS name,
    NULL::character varying(80) AS type,
    NULL::smallint[] AS array_agg;


--
-- Name: api_spells; Type: TABLE; Schema: public; Owner: -
--

DROP TABLE IF EXISTS public.api_spells;
CREATE TABLE public.api_spells (
    guid uuid NOT NULL,
    value json NOT NULL
);


--
-- Name: api_targets; Type: VIEW; Schema: public; Owner: -
--

DROP VIEW IF EXISTS public.api_targets;
CREATE VIEW public.api_targets AS
 SELECT api_rdts.guid,
    api_rdts.type,
    api_rdts.modifier,
    api_rdts.name,
    api_rdts.description,
    api_rdts.secondaryrdts
   FROM public.api_rdts
  WHERE ((api_rdts.type = 'rdt.target'::text) OR (api_rdts.type ~~ 'rdt.target.%'::text));


--
-- Name: arts; Type: TABLE; Schema: public; Owner: -
--

DROPT TABLE IF EXISTS public.arts CASCADE;
CREATE TABLE public.arts (
    id smallint NOT NULL,
    name character varying(20) NOT NULL,
    abbrev character varying(5) NOT NULL
);


--
-- Name: art_api_view; Type: VIEW; Schema: public; Owner: -
--
DRO VIEW IF EXISTS public.art_api_view CASCADE;
CREATE VIEW public.art_api_view AS
 SELECT arts.id,
    guidv.guid AS type,
    guidv.starttime,
    arts.name,
    arts.abbrev
   FROM (( SELECT ref_info.id,
            ref_info.guid,
            ref_info.type,
            ref_info.starttime
           FROM public.ref_info
          WHERE ((ref_info.type)::text ~~ 'art.%'::text)) guidv
     JOIN public.arts ON ((guidv.id = arts.id)));


--
-- Name: arts_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.arts_id_seq
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: arts_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.arts_id_seq OWNED BY public.arts.id;


--
-- Name: forms; Type: TABLE; Schema: public; Owner: -
--
DROP TABLE IF EXISTS public.forms CASCADE;
CREATE TABLE public.forms (
    art_id smallint NOT NULL,
    style_id smallint NOT NULL
);


--
-- Name: magicstyles; Type: TABLE; Schema: public; Owner: -
--

DROP TABLE IF EXISTS public.magicstyles CASCADE;
CREATE TABLE public.magicstyles (
    id smallint NOT NULL,
    name character varying(80) NOT NULL
);


--
-- Name: formview; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW public.formview AS
 SELECT forms.art_id,
    forms.style_id,
    arts.name AS art,
    arts.abbrev,
    magicstyles.name AS style
   FROM ((public.forms
     JOIN public.arts ON ((forms.art_id = arts.id)))
     JOIN public.magicstyles ON ((forms.style_id = magicstyles.id)));


--
-- Name: techniques; Type: TABLE; Schema: public; Owner: -
--

DROP TABLE IF EXISTS public.technqiues CASCADE;
CREATE TABLE public.techniques (
    art_id smallint NOT NULL,
    style_id smallint NOT NULL
);


--
-- Name: techniqueview; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW public.techniqueview AS
 SELECT techniques.art_id,
    techniques.style_id,
    arts.name AS art,
    arts.abbrev,
    magicstyles.name AS style
   FROM ((public.techniques
     JOIN public.arts ON ((techniques.art_id = arts.id)))
     JOIN public.magicstyles ON ((techniques.style_id = magicstyles.id)));


--
-- Name: artsview; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW public.artsview AS
 SELECT formview.art_id,
    formview.style_id,
    formview.art,
    formview.abbrev,
    formview.style,
    'Form'::text AS type
   FROM public.formview
UNION
 SELECT techniqueview.art_id,
    techniqueview.style_id,
    techniqueview.art,
    techniqueview.abbrev,
    techniqueview.style,
    'Technique'::text AS type
   FROM public.techniqueview
  ORDER BY 5, 6, 3;


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: -
--

DROP TABLE IF EXISTS public.auth_user CASCADE;
CREATE TABLE public.auth_user (
    id text NOT NULL,
    email character varying,
    displayname character varying(255),
    verified boolean DEFAULT false,
    expires timestamp without time zone
);


--
-- Name: spell_guidelines; Type: TABLE; Schema: public; Owner: -
--

DROP TABLE IF EXISTS public.spellguidelines CASCADE;
CREATE TABLE public.spell_guidelines (
    level smallint NOT NULL,
    style_id smallint DEFAULT 1 NOT NULL,
    technique_id smallint NOT NULL,
    form_id smallint NOT NULL,
    name character varying(255) NOT NULL,
    description text
);


--
-- Name: guidelinesview; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW public.guidelinesview AS
 SELECT spell_guidelines.style_id,
    spell_guidelines.form_id,
    spell_guidelines.technique_id,
    form.style,
    form.form,
    technique.technique,
    spell_guidelines.level,
    spell_guidelines.name,
    spell_guidelines.description
   FROM (public.spell_guidelines
     JOIN (( SELECT formview.style_id,
            formview.art_id AS form_id,
            formview.style,
            formview.art AS form
           FROM public.formview) form
     JOIN ( SELECT techniqueview.style_id,
            techniqueview.art_id AS technique_id,
            techniqueview.style,
            techniqueview.art AS technique
           FROM public.techniqueview) technique USING (style_id, style)) USING (style_id, technique_id, form_id));


--
-- Name: invalid_guidelines; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW public.invalid_guidelines AS
 SELECT DISTINCT spell_guidelines.level,
    spell_guidelines.form_id,
    spell_guidelines.technique_id,
    spell_guidelines.name,
    form.style_id AS form_style_id,
    technique.style_id AS technique_style_id
   FROM ((public.spell_guidelines
     JOIN public.formview form ON ((spell_guidelines.form_id = form.art_id)))
     JOIN public.techniqueview technique ON ((technique.art_id = spell_guidelines.technique_id)))
  WHERE (NOT (form.style_id = technique.style_id));


--
-- Name: magicstyles_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.magicstyles_id_seq
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: magicstyles_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.magicstyles_id_seq OWNED BY public.magicstyles.id;


--
-- Name: ranges; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW public.ranges AS
 SELECT rdts.id,
    rdts.modifier,
    rdts.name,
    rdts.type,
    rdts.description
   FROM public.rdts
  WHERE ((rdts.type)::text = 'range'::text);


--
-- Name: rdts_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.rdts_id_seq
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: rdts_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.rdts_id_seq OWNED BY public.rdts.id;


--
-- Name: secondarydurations; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW public.secondarydurations AS
 SELECT parent.parent_id,
    parent.rdt_id
   FROM ((public.secondaryrdts
     JOIN public.rdts ON ((secondaryrdts.parent_id = rdts.id))) parent
     JOIN ( SELECT rdts_1.id,
            rdts_1.modifier,
            rdts_1.name,
            rdts_1.type,
            rdts_1.description
           FROM public.rdts rdts_1
          WHERE ((rdts_1.type)::text = 'duration'::text)) secondary ON ((secondary.id = parent.id)))
  WHERE ((parent.type)::text = 'duration'::text);


--
-- Name: secondaryranges; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW public.secondaryranges AS
 SELECT parent.parent_id,
    parent.rdt_id
   FROM ((public.secondaryrdts
     JOIN public.rdts ON ((secondaryrdts.parent_id = rdts.id))) parent
     JOIN ( SELECT rdts_1.id,
            rdts_1.modifier,
            rdts_1.name,
            rdts_1.type,
            rdts_1.description
           FROM public.rdts rdts_1
          WHERE ((rdts_1.type)::text = 'range'::text)) secondary ON ((secondary.id = parent.id)))
  WHERE (((parent.type)::text = 'range'::text) AND ((secondary.type)::text = 'range'::text));


--
-- Name: spells; Type: TABLE; Schema: public; Owner: -
--

DROP TABLE IF EXISTS public.spells CASCADE;
CREATE TABLE public.spells (
    id integer NOT NULL,
    name character varying(80) NOT NULL,
    level smallint
);


--
-- Name: user_credentials; Type: TABLE; Schema: public; Owner: -
--

DROP TABLE IF EXISTS public.user_credentials CASCADE;
CREATE TABLE public.user_credentials (
    id text NOT NULL,
    password character varying(1024) NOT NULL,
    salt character varying(255) NOT NULL
);


--
-- Name: user_session; Type: TABLE; Schema: public; Owner: -
--

DROP TABLE IF EXISTS public.user_session CASCADE;
CREATE TABLE public.user_session (
    user_id text,
    expires_at timestamp with time zone NOT NULL,
    id text NOT NULL,
    api_key character varying(255) NOT NULL
);

--
-- Name: api_session; Type: TABLE; Schema: public; Owner: -
--

DROP TABLE IF EXISTS public.api_session CASCADE;
create table api_session(
    id text primary key references auth_user(id) on update cascade on delete cascade,
    token varchar(1024),
    expires timestamp without time zone not null, 
    key varchar(64)
);


--
-- Name: arts id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.arts ALTER COLUMN id SET DEFAULT nextval('public.arts_id_seq'::regclass);


--
-- Name: magicstyles id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.magicstyles ALTER COLUMN id SET DEFAULT nextval('public.magicstyles_id_seq'::regclass);


--
-- Name: rdts id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.rdts ALTER COLUMN id SET DEFAULT nextval('public.rdts_id_seq'::regclass);


--
-- Data for Name: api_spells; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.api_spells (guid, value) FROM stdin;
\.


--
-- Data for Name: arts; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.arts (id, name, abbrev) FROM stdin;
1	Animal	An
2	Aquam	Aq
3	Auram	Au
4	Corpus	Co
5	Herbam	He
6	Ignem	Ig
7	Imaginem	Im
8	Mentem	Me
9	Terram	Te
10	Vim	Vi
11	Creo	Cr
12	Intellego	In
13	Muto	Mu
14	Perdo	Pe
15	Rego	Re
\.


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.auth_user (id, email, displayname, verified, expires) FROM stdin;
\.


--
-- Data for Name: api_session; Type: TABLE DATA; Schema: public; Owner: -
-- 
COPY public.api_session (id, token, expires, key) FROM stdin;
\.


--
-- Data for Name: forms; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.forms (art_id, style_id) FROM stdin;
1	1
2	1
3	1
4	1
5	1
6	1
7	1
8	1
9	1
10	1
\.


--
-- Data for Name: ref_info; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.ref_info (guid, type, starttime, id) FROM stdin;
4391b3de-7c34-4ed5-ab86-6c140c566c07	art.form	0767-01-01	1
2a1bb4fa-09e5-4404-8f79-8098593157b1	art.form	0767-01-01	2
9f84272e-157c-4c5f-b081-d86ed185adb4	art.form	0767-01-01	3
0db8f554-9a87-4fb1-a878-57b8e15f6e35	art.form	0767-01-01	4
f2573ca3-1b56-49d5-ad70-0f692593c452	art.form	0767-01-01	5
4d295962-b3d0-4687-b1ef-01c7f0770e45	art.form	0767-01-01	6
385dfbd8-b3ed-4906-a44d-f067f8ed92c2	art.form	0767-01-01	7
82dfdebd-6923-49cb-9fd8-b3f622c192e4	art.form	0767-01-01	8
d746c136-245b-4525-96bb-2ba81b0b7ce1	art.form	0767-01-01	9
20d9453a-5a9b-442a-a998-b74fc128d2ab	art.form	0767-01-01	10
7a54ef15-acb6-4e46-ae5a-28bed298af88	art.technique	0767-01-01	11
dbe9ea30-5646-4287-baea-beba8900f85c	art.technique	0767-01-01	12
cb9fa868-8d66-43bd-b1f6-2ccd7fdb05a1	art.technique	0767-01-01	13
c073b9e1-4782-419a-ae23-f2108f8535fd	art.technique	0767-01-01	14
892b9975-bce2-4a93-bdda-fc6aaea49ae3	art.technique	0767-01-01	15
f9dbb24d-dc43-41cd-abfd-98790dbdc87e	rdt.range	0767-01-01	1
170fadec-25dc-4869-b656-845c402034c6	rdt.duration	0767-01-01	2
a95c18a8-979c-4a13-ac03-bd293d3eedb4	rdt.target	0767-01-01	3
08eb6a9e-8e72-452f-8ecb-8148ad04e30f	rdt.duration	0767-01-01	5
901ef389-00e4-48bd-bdd4-6822d8fb4427	rdt.target.sensory	0767-01-01	6
8d4727b1-30d6-42db-a487-e04f677b3d47	rdt.duration	0767-01-01	7
e023f2e4-9f43-4b12-9093-6ff9abee2edc	rdt.duration	0767-01-01	8
\.


--
-- Data for Name: magicstyles; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.magicstyles (id, name) FROM stdin;
1	Hermetic
\.


--
-- Data for Name: rdts; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.rdts (id, modifier, name, type, description) FROM stdin;
1	0	Personal	range	\N
2	0	Momentary	duration	\N
3	0	Individual	target	\N
5	2	Until	duration	\N
6	0	Touch	target.sensory	\N
7	1	Concentration	duration	\N
8	1	Diameter	duration	\N
\.


--
-- Data for Name: secondaryrdts; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.secondaryrdts (parent_id, rdt_id) FROM stdin;
5	2
5	7
5	8
\.


--
-- Data for Name: spell_guidelines; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.spell_guidelines (level, style_id, technique_id, form_id, name, description) FROM stdin;
2	1	11	1	Preserve a corpse from decay.	\N
0	1	15	1	Ward against beings associated with Animal.	Creates a ward against supernatural beings associated with animal from one realm with might less than or equal to the [level+0magnitudes] of the spell. [Range: Touch][Duration: Ring][Target: Circle]
5	1	11	1	Cure a Minor animal disease.	\N
1	1	12	1	Sense a supernatural creature of Might above 50 associated with Animal.	[ref: RoP:M, page:111]
3	1	11	1	Give animal +3 recovery bonus.	\N
\.


--
-- Data for Name: spells; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.spells (id, name, level) FROM stdin;
\.


--
-- Data for Name: techniques; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.techniques (art_id, style_id) FROM stdin;
11	1
12	1
13	1
14	1
15	1
\.


--
-- Data for Name: user_credentials; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.user_credentials (id, password, salt) FROM stdin;
\.


--
-- Data for Name: user_session; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.user_session (user_id, expires_at, id, api_key) FROM stdin;
\.


--
-- Name: arts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.arts_id_seq', 21, true);


--
-- Name: magicstyles_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.magicstyles_id_seq', 1, true);


--
-- Name: rdts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.rdts_id_seq', 8, true);


--
-- Name: api_spells api_spells_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.api_spells
    ADD CONSTRAINT api_spells_pkey PRIMARY KEY (guid);


--
-- Name: arts arts_abbrev_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.arts
    ADD CONSTRAINT arts_abbrev_key UNIQUE (abbrev);


--
-- Name: arts arts_name_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.arts
    ADD CONSTRAINT arts_name_key UNIQUE (name);


--
-- Name: arts arts_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.arts
    ADD CONSTRAINT arts_pkey PRIMARY KEY (id);


--
-- Name: auth_user auth_user_email_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_email_key UNIQUE (email);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: forms forms_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.forms
    ADD CONSTRAINT forms_pkey PRIMARY KEY (art_id, style_id);


--
-- Name: ref_info ref_info_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.ref_info
    ADD CONSTRAINT ref_info_pkey PRIMARY KEY (guid, id, starttime);


--
-- Name: magicstyles magicstyles_name_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.magicstyles
    ADD CONSTRAINT magicstyles_name_key UNIQUE (name);


--
-- Name: magicstyles magicstyles_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.magicstyles
    ADD CONSTRAINT magicstyles_pkey PRIMARY KEY (id);


--
-- Name: rdts rdts_name_type_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.rdts
    ADD CONSTRAINT rdts_name_type_key UNIQUE (name, type);


--
-- Name: rdts rdts_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.rdts
    ADD CONSTRAINT rdts_pkey PRIMARY KEY (id);


--
-- Name: secondaryrdts secondaryrdts_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.secondaryrdts
    ADD CONSTRAINT secondaryrdts_pkey PRIMARY KEY (parent_id, rdt_id);


--
-- Name: spell_guidelines spell_guidelines_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.spell_guidelines
    ADD CONSTRAINT spell_guidelines_pkey PRIMARY KEY (level, style_id, technique_id, form_id, name);


--
-- Name: spells spells_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.spells
    ADD CONSTRAINT spells_pkey PRIMARY KEY (id);


--
-- Name: techniques techniques_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.techniques
    ADD CONSTRAINT techniques_pkey PRIMARY KEY (art_id, style_id);


--
-- Name: user_credentials user_credentials_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.user_credentials
    ADD CONSTRAINT user_credentials_pkey PRIMARY KEY (id);


--
-- Name: user_session user_session_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.user_session
    ADD CONSTRAINT user_session_pkey PRIMARY KEY (id);


--
-- Name: api_rdts_noguid _RETURN; Type: RULE; Schema: public; Owner: -
--

CREATE OR REPLACE VIEW public.api_rdts_noguid AS
 SELECT rdts.id,
    rdts.modifier,
    rdts.name,
    rdts.type,
    array_agg(secondaryrdts.rdt_id) AS array_agg
   FROM (public.rdts
     LEFT JOIN public.secondaryrdts ON ((rdts.id = secondaryrdts.parent_id)))
  GROUP BY rdts.id;


--
-- Name: forms forms_art_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.forms
    ADD CONSTRAINT forms_art_id_fkey FOREIGN KEY (art_id) REFERENCES public.arts(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: forms forms_style_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.forms
    ADD CONSTRAINT forms_style_id_fkey FOREIGN KEY (style_id) REFERENCES public.magicstyles(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: secondaryrdts secondaryrdts_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.secondaryrdts
    ADD CONSTRAINT secondaryrdts_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.rdts(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: secondaryrdts secondaryrdts_rdt_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.secondaryrdts
    ADD CONSTRAINT secondaryrdts_rdt_id_fkey FOREIGN KEY (rdt_id) REFERENCES public.rdts(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: spell_guidelines spell_guidelines_form_id_style_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.spell_guidelines
    ADD CONSTRAINT spell_guidelines_form_id_style_id_fkey FOREIGN KEY (form_id, style_id) REFERENCES public.forms(art_id, style_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: spell_guidelines spell_guidelines_technique_id_style_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.spell_guidelines
    ADD CONSTRAINT spell_guidelines_technique_id_style_id_fkey FOREIGN KEY (technique_id, style_id) REFERENCES public.techniques(art_id, style_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: techniques techniques_art_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.techniques
    ADD CONSTRAINT techniques_art_id_fkey FOREIGN KEY (art_id) REFERENCES public.arts(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: techniques techniques_style_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.techniques
    ADD CONSTRAINT techniques_style_id_fkey FOREIGN KEY (style_id) REFERENCES public.magicstyles(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: user_credentials user_credentials_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.user_credentials
    ADD CONSTRAINT user_credentials_id_fkey FOREIGN KEY (id) REFERENCES public.auth_user(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: user_session user_session_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.user_session
    ADD CONSTRAINT user_session_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.auth_user(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

